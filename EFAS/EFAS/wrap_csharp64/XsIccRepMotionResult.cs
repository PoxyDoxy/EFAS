//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.10
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace XDA {

public class XsIccRepMotionResult : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal XsIccRepMotionResult(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(XsIccRepMotionResult obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~XsIccRepMotionResult() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          xsensdeviceapiPINVOKE.delete_XsIccRepMotionResult(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public float m_ddtAccuracy {
    set {
      xsensdeviceapiPINVOKE.XsIccRepMotionResult_m_ddtAccuracy_set(swigCPtr, value);
    } 
    get {
      float ret = xsensdeviceapiPINVOKE.XsIccRepMotionResult_m_ddtAccuracy_get(swigCPtr);
      return ret;
    } 
  }

  public byte m_dimension {
    set {
      xsensdeviceapiPINVOKE.XsIccRepMotionResult_m_dimension_set(swigCPtr, value);
    } 
    get {
      byte ret = xsensdeviceapiPINVOKE.XsIccRepMotionResult_m_dimension_get(swigCPtr);
      return ret;
    } 
  }

  public byte m_status {
    set {
      xsensdeviceapiPINVOKE.XsIccRepMotionResult_m_status_set(swigCPtr, value);
    } 
    get {
      byte ret = xsensdeviceapiPINVOKE.XsIccRepMotionResult_m_status_get(swigCPtr);
      return ret;
    } 
  }

  public XsIccRepMotionResult() : this(xsensdeviceapiPINVOKE.new_XsIccRepMotionResult__SWIG_0(), true) {
  }

  public XsIccRepMotionResult(XsIccRepMotionResult other) : this(xsensdeviceapiPINVOKE.new_XsIccRepMotionResult__SWIG_1(XsIccRepMotionResult.getCPtr(other)), true) {
    if (xsensdeviceapiPINVOKE.SWIGPendingException.Pending) throw xsensdeviceapiPINVOKE.SWIGPendingException.Retrieve();
  }

  public float ddtAccuracy() {
    float ret = xsensdeviceapiPINVOKE.XsIccRepMotionResult_ddtAccuracy(swigCPtr);
    return ret;
  }

  public byte dimension() {
    byte ret = xsensdeviceapiPINVOKE.XsIccRepMotionResult_dimension(swigCPtr);
    return ret;
  }

  public byte status() {
    byte ret = xsensdeviceapiPINVOKE.XsIccRepMotionResult_status(swigCPtr);
    return ret;
  }

}

}
